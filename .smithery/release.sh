#!/bin/bash

# Release script pro mcp-server-motherduck
# Automatizuje proces publikace nov√© verze na PyPI a Smithery

set -e  # Exit on error

# Barvy pro v√Ωstup
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funkce pro barevn√Ω v√Ωpis
info() { echo -e "${BLUE}‚Ñπ ${1}${NC}"; }
success() { echo -e "${GREEN}‚úì ${1}${NC}"; }
warning() { echo -e "${YELLOW}‚ö† ${1}${NC}"; }
error() { echo -e "${RED}‚úó ${1}${NC}"; exit 1; }

# Banner
echo -e "${BLUE}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   MCP Server MotherDuck - Release Script     ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

# Kontrola, ≈æe jsme v root adres√°≈ôi projektu
if [ ! -f "pyproject.toml" ] || [ ! -f "server.json" ]; then
    error "Tento script mus√≠ b√Ωt spu≈°tƒõn z root adres√°≈ôe projektu"
fi

# Z√≠sk√°n√≠ souƒçasn√© verze
CURRENT_VERSION=$(grep -E '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
info "Souƒçasn√° verze: ${CURRENT_VERSION}"

# Dotaz na novou verzi
read -p "$(echo -e ${YELLOW}Zadejte novou verzi \(nap≈ô. 0.6.5\):${NC} )" NEW_VERSION

if [ -z "$NEW_VERSION" ]; then
    error "Verze nem≈Ø≈æe b√Ωt pr√°zdn√°"
fi

# Validace form√°tu verze (z√°kladn√≠)
if ! [[ "$NEW_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    error "Neplatn√Ω form√°t verze. Pou≈æijte form√°t X.Y.Z (nap≈ô. 0.6.5)"
fi

info "Nov√° verze bude: ${NEW_VERSION}"

# Potvrzen√≠
read -p "$(echo -e ${YELLOW}Pokraƒçovat s vyd√°n√≠m verze ${NEW_VERSION}? \(y/n\):${NC} )" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    warning "Publikace zru≈°ena"
    exit 0
fi

# 1. Aktualizace pyproject.toml
info "Aktualizace pyproject.toml..."
sed -i.bak "s/^version = \".*\"/version = \"${NEW_VERSION}\"/" pyproject.toml
rm pyproject.toml.bak
success "pyproject.toml aktualizov√°n"

# 2. Aktualizace configs.py
info "Aktualizace src/mcp_server_motherduck/configs.py..."
sed -i.bak "s/SERVER_VERSION = \".*\"/SERVER_VERSION = \"${NEW_VERSION}\"/" src/mcp_server_motherduck/configs.py
rm src/mcp_server_motherduck/configs.py.bak
success "configs.py aktualizov√°n"

# 3. Aktualizace server.json (dvƒõ m√≠sta)
info "Aktualizace server.json..."
# Pou≈æijeme Python pro spolehlivƒõj≈°√≠ JSON √∫pravu
python3 << EOF
import json

with open('server.json', 'r') as f:
    data = json.load(f)

data['version'] = '${NEW_VERSION}'
data['packages'][0]['version'] = '${NEW_VERSION}'

with open('server.json', 'w') as f:
    json.dump(data, f, indent=2)
    f.write('\n')
EOF
success "server.json aktualizov√°n"

# 4. Zobrazen√≠ zmƒõn
info "Kontrola zmƒõn..."
echo
git diff pyproject.toml src/mcp_server_motherduck/configs.py server.json
echo

# Potvrzen√≠ zmƒõn
read -p "$(echo -e ${YELLOW}Vypadaj√≠ zmƒõny spr√°vnƒõ? \(y/n\):${NC} )" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    warning "Obnovuji p≈Øvodn√≠ verze..."
    git checkout pyproject.toml src/mcp_server_motherduck/configs.py server.json
    error "Publikace zru≈°ena"
fi

# 5. Build bal√≠ƒçku
info "Build bal√≠ƒçku pomoc√≠ uv..."
uv build || error "Build selhal"
success "Build dokonƒçen"

# 6. Testov√°n√≠
info "Testov√°n√≠ bal√≠ƒçku..."
uv run mcp-server-motherduck --help > /dev/null || error "Test spu≈°tƒõn√≠ selhal"
success "Test √∫spƒõ≈°n√Ω"

# 7. Dotaz na PyPI publikaci
read -p "$(echo -e ${YELLOW}Publikovat na PyPI? \(y/n\):${NC} )" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    info "Publikace na PyPI..."
    uv publish || warning "PyPI publikace selhala (pokraƒçujeme)"
    success "Publikov√°no na PyPI"
else
    warning "PyPI publikace p≈ôeskoƒçena"
fi

# 8. Git commit a tag
info "Vytv√°≈ôen√≠ Git commit a tagu..."
git add pyproject.toml src/mcp_server_motherduck/configs.py server.json
git commit -m "Release version ${NEW_VERSION}" || warning "Commit selhal (mo≈æn√° ≈æ√°dn√© zmƒõny)"
git tag "v${NEW_VERSION}" || warning "Tag ji≈æ existuje"
success "Git commit a tag vytvo≈ôeny"

# 9. Push na GitHub
read -p "$(echo -e ${YELLOW}Pushnout na GitHub? \(y/n\):${NC} )" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    info "Push na GitHub..."
    git push origin main || warning "Push main selhalo"
    git push origin "v${NEW_VERSION}" || warning "Push tagu selhalo"
    success "Pushnutu na GitHub"
else
    warning "GitHub push p≈ôeskoƒçen"
    info "Nezapome≈àte pozdƒõji spustit: git push origin main --tags"
fi

# 10. Smithery
echo
success "Release proces dokonƒçen! üéâ"
echo
info "Dal≈°√≠ kroky:"
echo "  1. Ovƒõ≈ôte bal√≠ƒçek na PyPI: https://pypi.org/project/mcp-server-motherduck/${NEW_VERSION}/"
echo "  2. Vytvo≈ôte GitHub Release: https://github.com/motherduckdb/mcp-server-motherduck/releases/new"
echo "  3. Smithery automaticky detekuje novou verzi z GitHub"
echo
info "Pro ruƒçn√≠ odesl√°n√≠ na Smithery:"
echo "  npx @smithery/cli publish https://github.com/motherduckdb/mcp-server-motherduck"
echo
success "Verze ${NEW_VERSION} je p≈ôipravena! üöÄ"
